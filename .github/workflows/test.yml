name: Tests
on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - "*"
  schedule:
    - cron: "0 1 * * *"
jobs:
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[dev]"
      - name: Audit Python packages for known vulnerabilities
        run: |
          if ! RES=$(ossaudit --installed --config setup.cfg); then
            RES="${RES//'%'/'%25'}"
            RES="${RES//$'\n'/'%0A'}"
            RES="${RES//$'\r'/'%0D'}"
            echo "::error ::${RES}"
            exit 1
          fi
          echo ${RES}
      - name: Format with black
        run: |
          if ! RES=$(black --check $(git diff --name-only --diff-filter=AM master -- "*.py") 2>&1); then
            RES="${RES//'%'/'%25'}"
            RES="${RES//$'\n'/'%0A'}"
            RES="${RES//$'\r'/'%0D'}"
            echo "::error ::${RES}"
            exit 1
          fi
          echo ${RES}
  unit-tests:
    needs: checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ".[test]"
      - name: Test with inv
        run: inv cover qa
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              python -m pip install --upgrade pip && \
              python --version && \
              uname -m && \
              whoami && \
              pwd && \
              ls && \
              python -m pip install --upgrade pip && \
              pip install ".[dev]" && \
              pip install ".[test]" && \
              inv cover qa && \
              deactivate'
